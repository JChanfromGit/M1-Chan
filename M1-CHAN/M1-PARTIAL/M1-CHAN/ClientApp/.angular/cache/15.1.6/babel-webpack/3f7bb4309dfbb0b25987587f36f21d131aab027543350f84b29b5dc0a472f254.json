{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/CustomerService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"input\", 26);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(customerService, router) {\n    this.customerService = customerService;\n    this.router = router;\n    this.title = 'Registration [CUSTOMER]';\n    this.showSuccess = false;\n    this.successMessage = '';\n    this.validateControl = controlName => {\n      return this.accountForm.get(controlName).invalid && this.accountForm.get(controlName).touched;\n    };\n    this.registerUser = registerFormValue => {\n      this.showSuccess = false;\n      const formValues = {\n        ...registerFormValue\n      };\n      const user = {\n        Id: 0,\n        UserName: formValues.UserName,\n        FirstName: formValues.FirstName,\n        LastName: formValues.LastName,\n        Nickname: formValues.Nickname,\n        EmailAddress: formValues.EmailAddress,\n        Password: formValues.Password\n      };\n    };\n    this.accountForm = new FormGroup({\n      UserName: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      FirstName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      LastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      Nickname: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      EmailAddress: new FormControl('', [Validators.required, Validators.email]),\n      Password: new FormControl('', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{8,}/)])\n    });\n  }\n  ngOnInit() {}\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"register\"]],\n  decls: 39,\n  vars: 2,\n  consts: [[1, \"vh-90\", \"gradient-custom\"], [1, \"container\", \"py-2\", \"h-90\"], [1, \"row\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-lg-9\", \"col-xl-7\"], [1, \"card\", \"shadow-2-strong\", \"card-registration\", \"forms\", 2, \"border-radius\", \"20px\"], [1, \"card-body\", \"p-3\", \"p-md-4\"], [1, \"mb-4\", \"pb-2\", \"pb-md-0\", \"mb-md-5\"], [\"autocomplete\", \"on\", \"novalidate\", \"\", \"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\", \"mb-4\", \"pb-2\"], [1, \"form-outline\"], [\"type\", \"text\", \"id\", \"UserName\", \"formControlName\", \"UserName\", \"placeholder\", \"UserName123\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"UserName\", 1, \"form-label\"], [1, \"col-md-6\", \"mb-4\"], [\"type\", \"text\", \"id\", \"FirstName\", \"formControlName\", \"FirstName\", \"placeholder\", \"Unknown\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"FirstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"LastName\", \"formControlName\", \"LastName\", \"placeholder\", \"User\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"LastName\", 1, \"form-label\"], [1, \"col-md-12\", \"mb-4\"], [\"type\", \"email\", \"id\", \"EmailAddress\", \"formControlName\", \"EmailAddress\", \"placeholder\", \"user@example.com\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"EmailAddress\", 1, \"form-label\"], [1, \"col-md-6\", \"mb-4\", \"pb-2\"], [\"type\", \"password\", \"id\", \"Password\", \"formControlName\", \"Password\", \"placeholder\", \"Password\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"Password\", 1, \"form-label\"], [\"class\", \"mt-4 pt-2\", 4, \"ngIf\"], [1, \"mt-4\", \"pt-2\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"btn\", \"btn-primary\", \"btn-lg\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.registerUser(ctx.accountForm.value);\n      });\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"input\", 11);\n      i0.ɵɵelementStart(13, \"label\", 12);\n      i0.ɵɵtext(14, \"Username\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"div\", 13)(17, \"div\", 10);\n      i0.ɵɵelement(18, \"input\", 14);\n      i0.ɵɵelementStart(19, \"label\", 15);\n      i0.ɵɵtext(20, \"First Name\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 13)(22, \"div\", 10);\n      i0.ɵɵelement(23, \"input\", 16);\n      i0.ɵɵelementStart(24, \"label\", 17);\n      i0.ɵɵtext(25, \"Last Name\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\", 18)(28, \"div\", 10);\n      i0.ɵɵelement(29, \"input\", 19);\n      i0.ɵɵelementStart(30, \"label\", 20);\n      i0.ɵɵtext(31, \"Email\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(32, \"div\", 8)(33, \"div\", 21)(34, \"div\", 10);\n      i0.ɵɵelement(35, \"input\", 22);\n      i0.ɵɵelementStart(36, \"label\", 23);\n      i0.ɵɵtext(37, \"Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(38, RegisterComponent_div_38_Template, 2, 0, \"div\", 24);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngIf\", ctx.accountForm.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"a.navbar-brand[_ngcontent-%COMP%] {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml[_ngcontent-%COMP%] {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n.alerts[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  width: 50vh;\\r\\n  height: 10%;\\r\\n  margin-top: -15vh;\\r\\n  margin-left: 12.5vh;\\r\\n}\\r\\n\\r\\n.forms[_ngcontent-%COMP%] {\\r\\n  background-color: #DBE0E4;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvRm9ybXMvUmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uYm94LXNoYWRvdyB7XHJcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcclxufVxyXG5cclxuLmFsZXJ0cyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA1MHZoO1xyXG4gIGhlaWdodDogMTAlO1xyXG4gIG1hcmdpbi10b3A6IC0xNXZoO1xyXG4gIG1hcmdpbi1sZWZ0OiAxMi41dmg7XHJcbn1cclxuXHJcbi5mb3JtcyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RCRTBFNDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","RegisterComponent","constructor","customerService","router","controlName","accountForm","get","invalid","touched","registerFormValue","showSuccess","formValues","user","Id","UserName","FirstName","LastName","Nickname","EmailAddress","Password","required","minLength","email","pattern","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Files\\VSC\\M1-Partial\\M1-CHAN\\M1-PARTIAL\\M1-CHAN\\ClientApp\\src\\app\\Forms\\Register\\register.component.ts","C:\\Files\\VSC\\M1-Partial\\M1-CHAN\\M1-PARTIAL\\M1-CHAN\\ClientApp\\src\\app\\Forms\\Register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomerService } from '../../services/CustomerService';\r\nimport { CustomerInterface } from '../../interfaces/CustomerInterface';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  title = 'Registration [CUSTOMER]';\r\n\r\n  accountForm: FormGroup;\r\n  showSuccess: boolean = false;\r\n  successMessage: string = '';\r\n\r\n  constructor(private customerService: CustomerService, private router: Router) {\r\n    this.accountForm = new FormGroup({\r\n      UserName: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      FirstName: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n      LastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n      Nickname: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      EmailAddress: new FormControl('', [Validators.required, Validators.email]),\r\n      Password: new FormControl('', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{8,}/)])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.accountForm.get(controlName)!.invalid && this.accountForm.get(controlName)!.touched;\r\n  }\r\n\r\n  public registerUser = (registerFormValue: any) => {\r\n    this.showSuccess = false;\r\n    const formValues = { ...registerFormValue };\r\n    const user: CustomerInterface = {\r\n      Id: 0,\r\n      UserName: formValues.UserName,\r\n      FirstName: formValues.FirstName,\r\n      LastName: formValues.LastName,\r\n      Nickname: formValues.Nickname,\r\n      EmailAddress: formValues.EmailAddress,\r\n      Password: formValues.Password\r\n    };\r\n  }\r\n\r\n}\r\n","<section class=\"vh-90 gradient-custom\">\r\n  <div class=\"container py-2 h-90\">\r\n    <div class=\"row justify-content-center align-items-center h-100\">\r\n      <div class=\"col-12 col-lg-9 col-xl-7\">\r\n        <div class=\"card shadow-2-strong card-registration forms\" style=\"border-radius: 20px;\">\r\n          <div class=\"card-body p-3 p-md-4\">\r\n            <h3 class=\"mb-4 pb-2 pb-md-0 mb-md-5\">Registration Form</h3>\r\n            <form [formGroup]=\"accountForm\" autocomplete=\"on\" novalidate (ngSubmit)=\"registerUser(accountForm.value)\" enctype=\"multipart/form-data\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 mb-4 pb-2\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"text\" id=\"UserName\" formControlName=\"UserName\" class=\"form-control form-control-lg\" placeholder=\"UserName123\" />\r\n                    <label class=\"form-label\" for=\"UserName\">Username</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-4\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"text\" id=\"FirstName\" formControlName=\"FirstName\" class=\"form-control form-control-lg\" placeholder=\"Unknown\" />\r\n                    <label class=\"form-label\" for=\"FirstName\">First Name</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6 mb-4\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"text\" id=\"LastName\" formControlName=\"LastName\" class=\"form-control form-control-lg\" placeholder=\"User\" />\r\n                    <label class=\"form-label\" for=\"LastName\">Last Name</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 mb-4\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"email\" id=\"EmailAddress\" formControlName=\"EmailAddress\" class=\"form-control form-control-lg\" placeholder=\"user@example.com\" />\r\n                    <label class=\"form-label\" for=\"EmailAddress\">Email</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-4 pb-2\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"password\" id=\"Password\" formControlName=\"Password\" class=\"form-control form-control-lg\" placeholder=\"Password\" />\r\n                    <label class=\"form-label\" for=\"Password\">Password</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mt-4 pt-2\" *ngIf=\"accountForm.valid\">\r\n                  <input class=\"btn btn-primary btn-lg\" type=\"submit\" value=\"Register\" />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}