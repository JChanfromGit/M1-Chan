{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/CustomerService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(customerService, router) {\n    this.customerService = customerService;\n    this.router = router;\n    this.title = 'Registration [CUSTOMER]';\n    this.showSuccess = false;\n    this.successMessage = '';\n    this.validateControl = controlName => {\n      return this.accountForm.get(controlName).invalid && this.accountForm.get(controlName).touched;\n    };\n    this.registerUser = registerFormValue => {\n      this.showSuccess = false;\n      const formValues = {\n        ...registerFormValue\n      };\n      const user = {\n        Id: 0,\n        UserName: formValues.UserName,\n        FirstName: formValues.FirstName,\n        LastName: formValues.LastName,\n        Nickname: formValues.Nickname,\n        EmailAddress: formValues.EmailAddress,\n        Password: formValues.Password\n      };\n    };\n    this.accountForm = new FormGroup({\n      UserName: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      FirstName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      LastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      Nickname: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      EmailAddress: new FormControl('', [Validators.required, Validators.email]),\n      Password: new FormControl('', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{8,}/)])\n    });\n  }\n  ngOnInit() {}\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"register\"]],\n  decls: 38,\n  vars: 1,\n  consts: [[1, \"vh-90\", \"gradient-custom\"], [1, \"container\", \"py-2\", \"h-90\"], [1, \"row\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-lg-9\", \"col-xl-7\"], [1, \"card\", \"shadow-2-strong\", \"card-registration\", \"forms\", 2, \"border-radius\", \"20px\"], [1, \"card-body\", \"p-3\", \"p-md-4\"], [1, \"mb-4\", \"pb-2\", \"pb-md-0\", \"mb-md-5\"], [\"autocomplete\", \"on\", \"novalidate\", \"\", \"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\", \"mb-4\", \"pb-2\"], [1, \"form-outline\"], [\"type\", \"text\", \"id\", \"UserName\", \"formControlName\", \"UserName\", \"placeholder\", \"UserName123\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"UserName\", 1, \"form-label\"], [1, \"col-md-6\", \"mb-4\"], [\"type\", \"text\", \"id\", \"FirstName\", \"formControlName\", \"FirstName\", \"placeholder\", \"Unknown\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"FirstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"LastName\", \"formControlName\", \"LastName\", \"placeholder\", \"User\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"LastName\", 1, \"form-label\"], [1, \"col-md-12\", \"mb-4\"], [\"type\", \"email\", \"id\", \"EmailAddress\", \"formControlName\", \"EmailAddress\", \"placeholder\", \"user@example.com\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"EmailAddress\", 1, \"form-label\"], [1, \"col-md-6\", \"mb-4\", \"pb-2\"], [\"type\", \"password\", \"id\", \"Password\", \"formControlName\", \"Password\", \"placeholder\", \"Password\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"Password\", 1, \"form-label\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.registerUser(ctx.accountForm.value);\n      });\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"input\", 11);\n      i0.ɵɵelementStart(13, \"label\", 12);\n      i0.ɵɵtext(14, \"Username\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"div\", 13)(17, \"div\", 10);\n      i0.ɵɵelement(18, \"input\", 14);\n      i0.ɵɵelementStart(19, \"label\", 15);\n      i0.ɵɵtext(20, \"First Name\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 13)(22, \"div\", 10);\n      i0.ɵɵelement(23, \"input\", 16);\n      i0.ɵɵelementStart(24, \"label\", 17);\n      i0.ɵɵtext(25, \"Last Name\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\", 18)(28, \"div\", 10);\n      i0.ɵɵelement(29, \"input\", 19);\n      i0.ɵɵelementStart(30, \"label\", 20);\n      i0.ɵɵtext(31, \"Email\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(32, \"div\", 8)(33, \"div\", 21)(34, \"div\", 10);\n      i0.ɵɵelement(35, \"input\", 22);\n      i0.ɵɵelementStart(36, \"label\", 23);\n      i0.ɵɵtext(37, \"Password\");\n      i0.ɵɵelementEnd()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n  font-family: Arial, sans-serif;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  width: 300px;\\r\\n  margin: 20px auto;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 5px;\\r\\n  background-color: #f9f9f9;\\r\\n}\\r\\n\\r\\n  form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 5px;\\r\\n  font-size: 16px;\\r\\n  border-radius: 3px;\\r\\n  border: 1px solid #ccc;\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  margin-top: 10px;\\r\\n  font-size: 16px;\\r\\n  font-weight: bold;\\r\\n  color: #fff;\\r\\n  background-color: #000000;\\r\\n  border: none;\\r\\n  border-radius: 3px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0066b3;\\r\\n  }\\r\\n\\r\\ndiv[hidden][_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\ndiv.alert[_ngcontent-%COMP%] {\\r\\n  margin-top: 10px;\\r\\n  padding: 10px;\\r\\n  border-radius: 3px;\\r\\n  background-color: #f44336;\\r\\n  color: #fff;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvRm9ybXMvUmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDhCQUE4QjtFQUM5QixTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIseUJBQXlCO0FBQzNCOztFQUVFO0lBQ0UsbUJBQW1CO0VBQ3JCOztBQUVGO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtBQUNuQjs7QUFFQTs7O0VBR0UsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztFQUVFO0lBQ0UseUJBQXlCO0VBQzNCOztBQUVGO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaDEge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG5mb3JtIHtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG59XHJcblxyXG4gIGZvcm0gZGl2IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG5cclxubGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxyXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbn1cclxuXHJcbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjZiMztcclxuICB9XHJcblxyXG5kaXZbaGlkZGVuXSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuZGl2LmFsZXJ0IHtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","RegisterComponent","constructor","customerService","router","controlName","accountForm","get","invalid","touched","registerFormValue","showSuccess","formValues","user","Id","UserName","FirstName","LastName","Nickname","EmailAddress","Password","required","minLength","email","pattern","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Files\\VSC\\M1-Partial\\M1-CHAN\\M1-PARTIAL\\M1-CHAN\\ClientApp\\src\\app\\Forms\\Register\\register.component.ts","C:\\Files\\VSC\\M1-Partial\\M1-CHAN\\M1-PARTIAL\\M1-CHAN\\ClientApp\\src\\app\\Forms\\Register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomerService } from '../../services/CustomerService';\r\nimport { CustomerInterface } from '../../interfaces/CustomerInterface';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  title = 'Registration [CUSTOMER]';\r\n\r\n  accountForm: FormGroup;\r\n  showSuccess: boolean = false;\r\n  successMessage: string = '';\r\n\r\n  constructor(private customerService: CustomerService, private router: Router) {\r\n    this.accountForm = new FormGroup({\r\n      UserName: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      FirstName: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n      LastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n      Nickname: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      EmailAddress: new FormControl('', [Validators.required, Validators.email]),\r\n      Password: new FormControl('', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{8,}/)])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.accountForm.get(controlName)!.invalid && this.accountForm.get(controlName)!.touched;\r\n  }\r\n\r\n  public registerUser = (registerFormValue: any) => {\r\n    this.showSuccess = false;\r\n    const formValues = { ...registerFormValue };\r\n    const user: CustomerInterface = {\r\n      Id: 0,\r\n      UserName: formValues.UserName,\r\n      FirstName: formValues.FirstName,\r\n      LastName: formValues.LastName,\r\n      Nickname: formValues.Nickname,\r\n      EmailAddress: formValues.EmailAddress,\r\n      Password: formValues.Password\r\n    };\r\n  }\r\n\r\n}\r\n","<section class=\"vh-90 gradient-custom\">\r\n  <div class=\"container py-2 h-90\">\r\n    <div class=\"row justify-content-center align-items-center h-100\">\r\n      <div class=\"col-12 col-lg-9 col-xl-7\">\r\n        <div class=\"card shadow-2-strong card-registration forms\" style=\"border-radius: 20px;\">\r\n          <div class=\"card-body p-3 p-md-4\">\r\n            <h3 class=\"mb-4 pb-2 pb-md-0 mb-md-5\">Registration Form</h3>\r\n            <form [formGroup]=\"accountForm\" autocomplete=\"on\" novalidate (ngSubmit)=\"registerUser(accountForm.value)\" enctype=\"multipart/form-data\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 mb-4 pb-2\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"text\" id=\"UserName\" formControlName=\"UserName\" class=\"form-control form-control-lg\" placeholder=\"UserName123\" />\r\n                    <label class=\"form-label\" for=\"UserName\">Username</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-4\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"text\" id=\"FirstName\" formControlName=\"FirstName\" class=\"form-control form-control-lg\" placeholder=\"Unknown\" />\r\n                    <label class=\"form-label\" for=\"FirstName\">First Name</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6 mb-4\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"text\" id=\"LastName\" formControlName=\"LastName\" class=\"form-control form-control-lg\" placeholder=\"User\" />\r\n                    <label class=\"form-label\" for=\"LastName\">Last Name</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 mb-4\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"email\" id=\"EmailAddress\" formControlName=\"EmailAddress\" class=\"form-control form-control-lg\" placeholder=\"user@example.com\" />\r\n                    <label class=\"form-label\" for=\"EmailAddress\">Email</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-4 pb-2\">\r\n                  <div class=\"form-outline\">\r\n                    <input type=\"password\" id=\"Password\" formControlName=\"Password\" class=\"form-control form-control-lg\" placeholder=\"Password\" />\r\n                    <label class=\"form-label\" for=\"Password\">Password</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}